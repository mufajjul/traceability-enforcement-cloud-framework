# This is the main configuration file for the application.
# ~~~~~
application.name=ConfidenShare
#Secure File Share
# Domain name (Boris)
application.providerName=Orange
#application.providerName=O2 #O2
#application.domain=10.0.0.95:9000 

application.domain=127.0.0.1:9000 

%test.application.domain=10.0.1.89:9000
%prod.application.domain=10.0.1.89:9000
#%prod.application.domain=10.0.1.89:7000 #O2
# Reencryption mode
application.reencMode=true
%prod.application.reencMode=true
# Wether we are using single hop library or multi hop library 
application.pre_multihop=false
# Auto-login as bob@gmail
application.autologin=false
%prod.application.autologin=false
 
# Application mode
# ~~~~~
# Set to dev to enable instant reloading and other development help.
# Otherwise set to prod.
application.mode=dev
%prod.application.mode=prod

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions
# If you deploy your application to several instances be sure to use the same key !
application.secret=v4isQeHaTwTCznLQ4Dfjo72ELKOLrNxBqjBoNm43A7n1EOjBgm7dHdh0ImJKSZnq

#ssl part
#X509 certificates
#certificate.key.file

#Specifies an X509 certificate key, for HTTPS support. The file must be named host.key. For example:

#certificate.key.file=/certificates/host.key
certificate.key.file=/certificates/serverMufi.key

#Default: conf/host.key
#certificate.file

#pecifies an X509 certificate file, for HTTPS support. The file must be named host.cert. For example:

#certificate.file=/certificates/host.cert
certificate.file=/certificates/serverMufi.cert

#Default: conf/host.cert
#certificate.password

#Password for a password-protected X509 certificate key file, for use with the certificate.key.file configuration. For example:
#certificate.password=mptcp12    ConfidenShare--> 195.

certificate.password=confidenshare
#confidenshare


# Additional modules
# ~~~~~
# A module is another play! application. Add a line for each module you want
# to add to your application. Modules path are either absolutes or relative to
# the application root.
# They get loaded from top to bottom; Syntax: module.{name}={path}
#
# Keep the next line as is to help the play script to manage modules.
# ---- MODULES ----


# i18n
# ~~~~~
# Define locales used by your application.
# You can then place localized messages in conf/messages.{locale} files
# application.langs=fr,en,ja

# Date format
# ~~~~~
date.format=yyyy-MM-dd
# date.format.fr=dd/MM/yyyy

# Server configuration
# ~~~~~
# If you need to change the HTTP port, uncomment this (default is set to 9000)
http.port=9000
https.port=9443 
# http.port=7000 #O2
#
# By default the server listen for HTTP on the wilcard address.
# You can restrict this.

#http.address=10.0.0.95
http.address=127.0.0.1

  #10.0.1.137

# Session configuration
# ~~~~~~~~~~~~~~~~~~~~~~
# By default, session will be written to the transient PLAY_SESSION cookie.
# The cookies are not secured by default, only set it to true
# if you're serving your pages through https.
application.session.cookie=PLAY
application.session.maxAge=1d
application.session.secure=true
application.session.httpOnly=true
# JVM configuration
# ~~~~~
# Define which port is used by JPDA when application is in debug mode (default is set to 8000)
# jpda.port=8000
#
# Java source level => 1.5, 1.6 or 1.7 (experimental)
java.source=1.6
%prod.java.source=1.5
#-Djava.library.path=lib/pre/

# Log level
# ~~~~~
# Specify log level for your application.
# If you want a very customized log, create a log4j.properties file in the conf directory
#application.log=DEBUG
application.log=INFO
#
# More logging configuration
 application.log.path=/log4j.properties
application.log.system.out=on

# Database configuration
# ~~~~~ 
# Enable a database engine if needed.
#
# To quickly set up a development database, use either:
#   - mem : for a transient in memory database (HSQL in memory)
#   - fs  : for a simple file written database (HSQL file stored)
#db=fs
%test.db.url=jdbc:h2:mem:play;MODE=MYSQL;LOCK_MODE=0
#%test.db.url=mysql:gve:confidenshare@secure_data_cloud_db
prod.db=mysql:gve:confidenshare@secure_data_cloud_db
#%prod.db=mysql:gve:SecureDataCloudPLAY@secure_data_cloud_db_o2
#
# To connect to a local MySQL5 database, use:
 db=mysql:gve:confidenshare@secure_data_cloud_db
#
# If you need a full JDBC configuration use the following :
# db.url=jdbc:postgresql:database_name
# db.driver=org.postgresql.Driver
# db.user=root
# db.pass=secret
#
# Connections pool configuration :
# db.pool.timeout=1000
# db.pool.maxSize=30
# db.pool.minSize=10
#
# If you want to reuse an existing Datasource from your application server, use:
# db=java:/comp/env/jdbc/myDatasource

# JPA Configuration (Hibernate)
# ~~~~~
#
# Specify the custom JPA dialect to use here (default to guess):
# jpa.dialect=org.hibernate.dialect.PostgreSQLDialect
#
# Specify the ddl generation pattern to use. Set to none to disable it 
# (default to update in DEV mode, and none in PROD mode):

#jpa.ddl=update

jpa.ddl=create-drop

#
# Debug SQL statements (logged using DEBUG level):
# jpa.debugSQL=true
#
# You can even specify additional hibernate properties here:
# hibernate.use_sql_comments=true
# ...
hibernate.globally_quoted_identifiers=true 

# Store path for Blob content
attachments.path=data/attachments

# Memcached configuration
# ~~~~~ 
# Enable memcached if needed. Otherwise a local cache is used.
# memcached=enabled
#
# Specify memcached host (default to 127.0.0.1:11211)
# memcached.host=127.0.0.1:11211
#
# Or you can specify multiple host to build a distributed cache
# memcached.1.host=127.0.0.1:11211
# memcached.2.host=127.0.0.1:11212

# HTTP Response headers control for static files
# ~~~~~
# Set the default max-age, telling the user's browser how long it should cache the page.
# Default is 3600 (one hour). Set it to 0 to send no-cache.
# This is only read in prod mode, in dev mode the cache is disabled.
# http.cacheControl=3600

# If enabled, Play will generate entity tags automatically and send a 304 when needed.
# Default is true, set it to false to deactivate use of entity tags.
# http.useETag=true

# Custom mime types
# mimetype.xpi=application/x-xpinstall

# WS configuration
# ~~~~~
# If you need to set proxy params for WS requests
# http.proxyHost = localhost
# http.proxyPort = 3128
# http.proxyUser = jojo
# http.proxyPassword = jojo

# Mail configuration
# ~~~~~ 
# Default is to use a mock Mailer
mail.smtp=mock

# Or, specify mail host configuration
# mail.smtp.host=127.0.0.1
# mail.smtp.user=admin
# mail.smtp.pass=
# mail.smtp.channel=ssl

# Jobs executor
# ~~~~~~
# Size of the Jobs pool
# play.jobs.pool=10

# Execution pool
# ~~~~~
# Default to 1 thread in DEV mode or (nb processors + 1) threads in PROD mode.
# Try to keep a low as possible. 1 thread will serialize all requests (very useful for debugging purpose)
# play.pool=3

# Open file from errors pages
# ~~~~~
# If your text editor supports opening files by URL, Play! will
# dynamically link error pages to files 
#
# Example, for textmate:
# play.editor=txmt://open?url=file://%s&line=%s

# Testing. Set up a custom configuration for test mode
# ~~~~~
#%test.module.cobertura=${play.path}/modules/cobertura
%test.application.mode=dev
%test.db=mem
%test.jpa.ddl=create-drop
%test.mail.smtp=mock

#Provenance service settings
traceability.serviceName=ConfidenShare
traceability.traceabilityRecord=Instance
traceability.StoreAdd=127.0.0.1
traceability.storePort=7000
traceability.dropboxAppKey = kdq5e7yzfj1djue
traceability.dropboxAppSec= sosqbjcefok175j

#Spring integration 
module.spring=${play.path}/modules/spring-1.0.3
spring.context = application-context.xml
spring.add-play-properties = true


# workout how to use the relative path

traceability.policy.cProvlPolicyDirectoryPath = /java/projects/CloudProvenance/client/TraceableConfidenShareService/app/policies/cprovl
traceability.policy.xacmlPolicyConverterFile = /java/projects/CloudProvenance/client/TraceableConfidenShareService/app/transformer/cprovl-to-xacml-policy-converter-v.4.xsl
traceability.policy.xacmlPolicyDirectoryPath = /java/projects/CloudProvenance/client/TraceableConfidenShareService/app/policies/xacml

traceability.policy.cProvlRequestDirectoryPath = /java/projects/CloudProvenance/client/TraceableConfidenShareService/app/requests/cprovl
traceability.policy.xacmlRequestConverterFile = /java/projects/CloudProvenance/client/TraceableConfidenShareService/app/transformer/cprovl-to-xacml-request-converter-v.2.xsl
traceability.policy.xacmlRequestDirectoryPath = /java/projects/CloudProvenance/client/TraceableConfidenShareService/app/requests/xacml
#policy type: strict, moderate
traceability.policy.type=strict

module.maven=${play.path}/modules/maven-head


